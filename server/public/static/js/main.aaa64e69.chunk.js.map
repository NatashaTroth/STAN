{"version":3,"sources":["images/icons/logo.svg","images/mascots/0-stressed-1.svg","images/mascots/user-mascot/0.svg","images/mascots/user-mascot/1.svg","images/mascots/user-mascot/2.svg","images/mascots/user-mascot/3.svg","images/mascots/user-mascot/4.svg","images/mascots/user-mascot/5.svg","images/desk1.png","images/desk2.png","images/icons/profile.png","accessToken.js","apolloClient.js","graphQL/queries.js","components/burger-button/BurgerButton.js","components/empty-dashboard/EmptyDashboard.js","components/today-subject/TodaySubject.js","components/today-goals/TodayGoals.js","graphQL/mutations.js","pages/dashboard-page/DashboardPage.js","components/label/Label.js","components/input/Input.js","components/textarea/Textarea.js","components/button/Button.js","components/add-new/AddNew.js","pages/add-new-page/AddNewPage.js","pages/calendar-page/CalendarPage.js","components/current-exam/CurrentExam.js","pages/exams-page/ExamsPage.js","pages/no-match-page/404Page.js","pages/user-account-page/UserAccountPage.js","pages/imprint-page/ImprintPage.js","pages/data-policy-page/DataPolicyPage.js","components/login/Login.js","pages/login-page/LoginPage.js","components/mascots/Mascots.js","components/signup/SignUp.js","pages/sign-up-page/SignUpPage.js","components/sub-heading/SubHeading.js","components/listing/Listing.js","pages/home-page/HomePage.js","components/image/Image.js","pages/about-page/AboutPage.js","components/login-popup/LoginPopUp.js","components/content/Content.js","components/backdrop/Backdrop.js","components/STAN/STAN.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","accessToken","setAccessToken","s","getAccessToken","cache","InMemoryCache","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","setContext","headers","Authorization","subscribe","next","bind","error","complete","catch","unsubscribe","client","ApolloClient","link","from","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","token","exp","jwtDecode","Date","now","err","console","fetchAccessToken","fetch","method","credentials","handleFetch","handleError","warn","onError","graphQLErrors","networkError","log","HttpLink","uri","GET_USERS_QUERY","gql","GET_EXAMS_QUERY","CURRENT_USER","burgerButton","props","className","onClick","click","EmptyDashboard","useQuery","loading","href","TodaySubject","subject","durationTime","id","showDetails","TodayGoals","e","preventDefault","subjectEventClickHandler","event","currentTarget","classList","value","remove","add","LOGIN_MUTATION","LOGOUT_MUTATION","ADD_EXAM_MUTATION","SIGNUP_MUTATION","GOOGLE_LOGIN_MUTATION","Dashboard","today","getDay","getDate","getMonth","getFullYear","getCurrentDate","Label","labeltype","text","htmlFor","forwardRef","ref","label","placeholder","type","name","onChange","maxLength","Button","variant","AddNew","useForm","register","errors","handleSubmit","onSubmit","formData","a","JSON","stringify","exam_date","addExam","variables","exam_subject","examDate","startDate","exam_start_date","numberPages","parseInt","exam_page_amount","currentPage","exam_page_current","timePerPage","exam_page_time","timesRepeat","exam_page_repeat","notes","exam_page_notes","pdfLink","completed","userId","data","currentUser","refetchQueries","query","resp","document","getElementById","style","display","Error","message","useMutation","mutationData","for","required","minLength","min","max","AddNewPage","Calendar","class","classname","defaultView","plugins","dayGridPlugin","events","title","date","React","Component","CurrentExam","currentStatus","Exams","useState","isArchiveOpen","setArchiveExams","NoMatch404","src","Stan","alt","UserAccount","logoutButton","logout","history","useHistory","logUserOut","localStorage","setItem","resetStore","push","window","location","reload","Imprint","DataPolicy","Login","successGoogle","response","googleLogin","idToken","tokenId","googleLoginData","login","loginData","handleLogin","pattern","email","password","data-testid","clientId","process","buttonText","render","renderProps","disabled","onSuccess","onFailure","Qt","Ad","cookiePolicy","LoginPage","Mascots","getMascotCallback","showStatus","showThumbs","infiniteLoop","showIndicators","useKeyboardArrows","HappyMascot","VeryHappyMascot","HappyGirlyMascot","VeryHappyGirlyMascot","HappyCleverMascot","VeryHappyCleverMascot","SignUp","signup","selectedMascot","getSelectedMascot","handleSignup","number","username","mascot","SignUpPage","SubHeading","Listing","Home","Image","path","About","Pic1","Pic2","LoginPopUp","Content","isAuth","exact","component","to","backdrop","Navbar","isSideBarOpen","setSideBar","handleClickSidebar","closeSidebar","Backdrop","Logo","BurgerButton","body","strict","activeClassName","App","setLoading","addEventListener","key","removeItem","replace","useEffect","json","STAN","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aaa64e69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1af37ff3.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-stressed-1.05296729.svg\";","module.exports = __webpack_public_path__ + \"static/media/0.813db462.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.0a915fbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.a7e55966.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.443d414d.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.05949106.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.05f1a491.svg\";","module.exports = __webpack_public_path__ + \"static/media/desk1.34921a2c.png\";","module.exports = __webpack_public_path__ + \"static/media/desk2.267b79ce.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.ad041904.png\";","let accessToken = \"\"\n\nexport const setAccessToken = s => {\n  accessToken = s\n}\n\nexport const getAccessToken = () => {\n  return accessToken\n}\n","import \"./App.scss\"\nimport { getAccessToken, setAccessToken } from \"./accessToken\"\n\nimport { ApolloClient } from \"apollo-client\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { onError } from \"apollo-link-error\"\n\nimport { ApolloLink, Observable } from \"apollo-link\"\nimport jwtDecode from \"jwt-decode\"\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\"\n\nconst cache = new InMemoryCache({})\n\n//src: https://www.apollographql.com/docs/react/migrating/boost-migration/#advanced-migration\nconst requestLink = new ApolloLink(\n  (operation, forward) =>\n    new Observable(observer => {\n      let handle\n      Promise.resolve(operation)\n        .then(oper => {\n          //from old apollo boost client\n          const accessToken = getAccessToken()\n          if (accessToken) {\n            oper.setContext({\n              headers: {\n                Authorization: accessToken ? `bearer ${accessToken}` : \"\",\n              },\n            })\n          }\n        })\n        .then(() => {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer),\n          })\n        })\n        .catch(observer.error.bind(observer))\n\n      return () => {\n        if (handle) handle.unsubscribe()\n      }\n    })\n)\n\nexport const client = new ApolloClient({\n  link: ApolloLink.from([\n    new TokenRefreshLink({\n      accessTokenField: \"accessToken\",\n      isTokenValidOrUndefined: () => {\n        //checks if token is valid - called in every graphql request - only does something if token is invalid though\n        const token = getAccessToken()\n\n        if (!token) {\n          return true\n        }\n\n        try {\n          //exp = expires\n          const { exp } = jwtDecode(token)\n          //if currentdate is bigger than the expiration date of the accesstoken - times 1000 for seconds/milliseconds\n          if (Date.now() >= exp * 1000) {\n            return false\n          } else {\n            return true\n          }\n        } catch (err) {\n          console.error(err)\n          return false\n        }\n      },\n      fetchAccessToken: () => {\n        //if token is not valid\n        return fetch(\"/refresh_token\", {\n          method: \"POST\",\n          credentials: \"include\",\n          // headers: {},\n        })\n      },\n      //read access token from response\n      handleFetch: accessToken => {\n        //set accesstoken\n        setAccessToken(accessToken)\n      },\n\n      handleError: err => {\n        //called whenever try to fetch accesstoken (fetch post request - but shouldn't be called)\n        // full control over handling token fetch Error\n        console.warn(\"Your refresh token is invalid. Try to relogin\")\n        console.error(err)\n\n        // // your custom action here\n        // user.logout()\n      },\n    }),\n\n    onError(({ graphQLErrors, networkError }) => {\n      //TODO-AUTH\n      console.log(graphQLErrors)\n      console.log(networkError)\n      // if (graphQLErrors) {\n      //   sendToLoggingService(graphQLErrors)\n      // }\n      // if (networkError) {\n      //   logoutUser()\n      // }\n    }),\n    requestLink,\n\n    new HttpLink({\n      uri: \"/graphql\",\n      credentials: \"include\",\n    }),\n  ]),\n  cache,\n})\n","import { gql } from \"apollo-boost\" //to make queries\n\n//!! no space after gql!! - parsing graphql query to js\nconst GET_USERS_QUERY = gql`\n  {\n    users {\n      id\n      username\n      email\n      mascot\n    }\n  }\n`\n\n//!! no space after gql!! - parsing graphql query to js\nconst GET_EXAMS_QUERY = gql`\n  {\n    exams {\n      id\n      subject\n      examDate\n      startDate\n      numberPages\n      timePerPage\n      currentPage\n      notes\n      pdfLink\n      completed\n      userId\n    }\n  }\n`\n\n//!! no space after gql!! - parsing graphql query to js\nconst GET_BOOKS_QUERY = gql`\n  {\n    books {\n      name\n      id\n    }\n  }\n`\n\nconst GET_BOOK_QUERY = gql`\n  query($id: ID!) {\n    book(id: $id) {\n      id\n      name\n      genre\n      author {\n        id\n        name\n        age\n        books {\n          name\n          id\n        }\n      }\n    }\n  }\n`\n\nconst GET_AUTHORS_QUERY = gql`\n  {\n    authors {\n      name\n      id\n    }\n  }\n`\n\nconst SUCCESS_SIGNUP = gql`\n  {\n    user {\n      username\n      email\n      password\n    }\n  }\n`\n\n//TODO: cache result of current user query - so you don't have to keep fetching it from the server - use apollo!\n//https://www.youtube.com/watch?v=25GS0MLT8JU 2:52:35\nconst CURRENT_USER = gql`\n  query {\n    currentUser {\n      id\n      username\n      email\n      mascot\n      googleLogin\n    }\n  }\n`\n\nexport {\n  GET_USERS_QUERY,\n  GET_EXAMS_QUERY,\n  GET_AUTHORS_QUERY,\n  GET_BOOKS_QUERY,\n  GET_BOOK_QUERY,\n  SUCCESS_SIGNUP,\n  CURRENT_USER,\n  // GOOGLE_AUTH_URL,\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst burgerButton = props => (\n  <button className=\"burger__btn\" onClick={props.click}>\n    <div className=\"burger__btn__line line-1\" />\n    <div className=\"burger__btn__line line-2\" />\n    <div className=\"burger__btn__line line-3\" />\n  </button>\n)\n\nexport default burgerButton\n","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { GET_USERS_QUERY } from \"../../graphQL/queries\"\n// --------------------------------------------------------------\n\nfunction EmptyDashboard() {\n  // query ----------------\n  const { loading, error } = useQuery(GET_USERS_QUERY)\n\n  // error handling ----------------\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  // return ----------------\n  return (\n    <div className=\"empty-dashboard box-content\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h3 className=\"empty-dashboard__heading\">No open tasks</h3>\n            <p className=\"empty-dashboard__text\">\n              Are you sure there are no exams you need to study for?\n            </p>\n            <a\n              href=\"/add-new\"\n              className=\"empty-dashboard__btn stan-btn-primary\"\n            >\n              {\" \"}\n              Add exam\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmptyDashboard\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// TODO: showDetails should determine what gets rendered ind today component\nconst TodaySubject = ({ subject, durationTime, id, onClick, showDetails }) => {\n  // return ----------------\n  return (\n    <button className=\"today-subject\" id={id} onClick={onClick}>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h4 className=\"today-subject__heading\">{subject}</h4>\n          </div>\n          <div className=\"col-md-12\">\n            <div className=\"today-subject__duration\">\n              <p className=\"today-subject__duration__text\">Duration</p>\n              <p className=\"today-subject__duration__time\">{durationTime}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </button>\n  )\n}\n\nexport default TodaySubject\n","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { GET_USERS_QUERY } from \"../../graphQL/queries\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport TodaySubject from \"../../components/today-subject/TodaySubject\"\n\nfunction TodayGoals() {\n  // query ----------------\n  const { loading, error } = useQuery(GET_USERS_QUERY)\n\n  // error handling ----------------\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  // return ----------------\n  return (\n    <div className=\"today-goals box-content\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"today-goals__container\">\n              <div className=\"today-goals__container__header\">\n                <h3 className=\"today-goals__container__header__heading\">\n                  Todays Goals\n                </h3>\n                <p className=\"today-goals__container__header__time\">2:30h</p>\n              </div>\n            </div>\n            {/* LOOP through each task */}\n            {/* on click check if class is set */}\n            <TodaySubject\n              subject=\"Computer Networking\"\n              durationTime=\"20 min\"\n              onClick={e => {\n                e.preventDefault()\n                subjectEventClickHandler(e)\n              }}\n            ></TodaySubject>\n            <TodaySubject\n              subject=\"Business English\"\n              durationTime=\"60 min\"\n              onClick={e => {\n                e.preventDefault()\n                subjectEventClickHandler(e)\n              }}\n            ></TodaySubject>\n            <TodaySubject\n              subject=\"Multimedia\"\n              durationTime=\"40 min\"\n              onClick={e => {\n                e.preventDefault()\n                subjectEventClickHandler(e)\n              }}\n            ></TodaySubject>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TodayGoals\n\nfunction subjectEventClickHandler(event) {\n  if (event.currentTarget.classList.value === \"today-subject active-subject\") {\n    event.currentTarget.classList.remove(\"active-subject\")\n  } else {\n    event.currentTarget.classList.add(\"active-subject\")\n  }\n}\n","import { gql } from \"apollo-boost\" //to make queries\n\n//!!Make sure the type in mutation here, is the same type as used by graphql\nconst ADD_BOOK_MUTATION = gql`\n  mutation($name: String!, $genre: String!, $authorId: ID!) {\n    addBook(name: $name, genre: $genre, authorId: $authorId) {\n      name\n      id\n    }\n  }\n`\n\nconst LOGIN_MUTATION = gql`\n  mutation($email: String!, $password: String) {\n    login(email: $email, password: $password) {\n      user {\n        id\n        username\n        email\n        mascot\n      }\n      accessToken\n      tokenExpiration\n    }\n  }\n`\n\nconst LOGOUT_MUTATION = gql`\n  mutation {\n    logout\n  }\n`\n\n//!!Make sure the type in mutation here, is the same type as used by graphql\nconst ADD_EXAM_MUTATION = gql`\n  mutation(\n    $subject: String!\n    $examDate: Date!\n    $startDate: Date\n    $numberPages: Int!\n    $timePerPage: Int\n    $timesRepeat: Int\n    $currentPage: Int\n    $notes: String\n    $pdfLink: String\n    $completed: Boolean\n    $userId: ID!\n  ) {\n    addExam(\n      subject: $subject\n      examDate: $examDate\n      startDate: $startDate\n      numberPages: $numberPages\n      timePerPage: $timePerPage\n      timesRepeat: $timesRepeat\n      currentPage: $currentPage\n      notes: $notes\n      pdfLink: $pdfLink\n      completed: $completed\n      userId: $userId\n    )\n  }\n`\n\nconst SIGNUP_MUTATION = gql`\n  mutation(\n    $username: String!\n    $email: String!\n    $password: String\n    $mascot: Int\n  ) {\n    signup(\n      username: $username\n      email: $email\n      password: $password\n      mascot: $mascot\n    ) {\n      user {\n        id\n        username\n        email\n      }\n      accessToken\n      tokenExpiration\n    }\n  }\n`\n\nconst GOOGLE_LOGIN_MUTATION = gql`\n  mutation($idToken: String!) {\n    googleLogin(idToken: $idToken) {\n      user {\n        id\n        username\n        email\n      }\n      accessToken\n      tokenExpiration\n    }\n  }\n`\n\nexport {\n  ADD_BOOK_MUTATION,\n  ADD_EXAM_MUTATION,\n  LOGIN_MUTATION,\n  LOGOUT_MUTATION,\n  SIGNUP_MUTATION,\n  GOOGLE_LOGIN_MUTATION,\n}\n","import React from \"react\"\n\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { CURRENT_USER } from \"../../graphQL/queries\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport EmptyDashboard from \"../../components/empty-dashboard/EmptyDashboard\"\nimport TodayGoals from \"../../components/today-goals/TodayGoals\"\nimport { GOOGLE_URL_AUTH_CODE_MUTATION } from \"../../graphQL/mutations\"\n\nfunction Dashboard() {\n  // query ----------------\n  const { loading, error } = useQuery(CURRENT_USER)\n\n  // error handling ----------------\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  // return ----------------\n  return (\n    <div className=\"dashboard-page\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h2 className=\"dashboard-page__heading\">\n              Hello you\n              {/* {data.currentUser.username} */}\n            </h2>\n            <p className=\"dashboard-page__current-date\">{getCurrentDate()}</p>\n          </div>\n          {/* ------ no tasks ------*/}\n          <div className=\"col-md-8\">\n            <EmptyDashboard></EmptyDashboard>\n          </div>\n          <div className=\"col-md-4\"></div>\n          {/* ------ if tasks open ------*/}\n          <div className=\"col-md-4\">\n            <TodayGoals></TodayGoals>\n          </div>\n          <div className=\"col-md-8\">{/* Today */}</div>\n          <div className=\"col-md-4\">{/* Today Progress */}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n\nfunction getCurrentDate() {\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ]\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ]\n\n  let today = new Date()\n  let date =\n    days[today.getDay()] +\n    \", \" +\n    today.getDate() +\n    \". \" +\n    monthNames[today.getMonth() + 1] +\n    \" \" +\n    today.getFullYear()\n\n  return date\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Label = ({ labeltype, text, className }) => {\n  // return ----------------\n  return (\n    <label htmlFor={labeltype} className={className}>\n      {text}\n    </label>\n  )\n}\n\nexport default Label\n","import React, { forwardRef } from \"react\"\n// --------------------------------------------------------------\n\nconst Input = ({ value, label, placeholder, type, id, className }, ref) => {\n  // return ----------------\n  return (\n    <input\n      ref={ref}\n      type={type}\n      id={id}\n      name={label}\n      placeholder={placeholder}\n      value={value}\n      className={className}\n    />\n  )\n}\n\nexport default forwardRef(Input)\n","import React, { forwardRef } from \"react\"\n// --------------------------------------------------------------\n\nconst Textarea = (\n  { value, onChange, label, placeholder, maxLength, id, className },\n  ref\n) => {\n  // return ----------------\n  return (\n    <textarea\n      ref={ref}\n      id={id}\n      name={label}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      maxLength={maxLength}\n      className={className}\n    />\n  )\n}\n\nexport default forwardRef(Textarea)\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Button = ({ variant, text, className, onClick }) => {\n  // return ----------------\n  return (\n    <button variant={variant} className={className} onClick={onClick}>\n      {text}\n    </button>\n  )\n}\n\nexport default Button\n","import React from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { CURRENT_USER, GET_EXAMS_QUERY } from \"../../graphQL/queries\"\nimport { ADD_EXAM_MUTATION } from \"../../graphQL/mutations\"\nimport { useForm } from \"react-hook-form\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport Label from \"../../components/label/Label\"\nimport Input from \"../../components/input/Input\"\nimport Textarea from \"../../components/textarea/Textarea\"\nimport Button from \"../../components/button/Button\"\n\nfunction AddNew() {\n  // form specific ----------------\n  const { register, errors, handleSubmit } = useForm()\n\n  const onSubmit = async formData => {\n    try {\n      console.log(JSON.stringify(formData.exam_date))\n      const resp = await addExam({\n        variables: {\n          subject: formData.exam_subject,\n          examDate: formData.exam_date,\n          startDate: formData.exam_start_date,\n          numberPages: parseInt(formData.exam_page_amount),\n          currentPage: parseInt(formData.exam_page_current),\n          timePerPage: parseInt(formData.exam_page_time),\n          timesRepeat: parseInt(formData.exam_page_repeat),\n          notes: formData.exam_page_notes,\n          // pdfLink: formData.exam_pdf_upload,\n          pdfLink: \"TODO: CHANGE LATER\",\n          completed: false,\n          userId: data.currentUser.id,\n        },\n        refetchQueries: [{ query: GET_EXAMS_QUERY }],\n      })\n\n      if (resp && resp.data && resp.data.addExam) {\n        // success message ----------------\n        document.getElementById(\"success-container\").style.display = \"block\"\n      } else {\n        // displays server error (backend)\n        throw new Error(\"The exam could not be added\")\n      }\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  // query ----------------\n  const { loading, error, data } = useQuery(CURRENT_USER)\n\n  // mutation ----------------\n  const [addExam, { mutationData }] = useMutation(ADD_EXAM_MUTATION)\n\n  // error handling ----------------\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  // return ----------------\n  return (\n    <div className=\"add-new box-content\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h3 className=\"add-new__heading\">Exam details</h3>\n          </div>\n          <div className=\"col-md-12\">\n            <form\n              // onSubmit={handleSubmit}\n              onSubmit={handleSubmit(onSubmit)}\n              id=\"add-exam\"\n              className=\"add-new__form\"\n            >\n              <div className=\"row\">\n                <div className=\"col-md-6 add-new__left\">\n                  <div className=\"add-new__form__element\">\n                    <Label\n                      for=\"subject\"\n                      text=\"Subject\"\n                      className=\"add-new__form__element__label input-required\"\n                    ></Label>\n                    <Input\n                      className=\"add-new__form__element__input\"\n                      type=\"text\"\n                      id=\"subject\"\n                      label=\"exam_subject\"\n                      placeholder=\"Math\"\n                      required\n                      ref={register({\n                        required: true,\n                        minLength: 1,\n                        maxLength: 20,\n                      })}\n                    />\n                    {errors.exam_subject &&\n                      errors.exam_subject.type === \"required\" && (\n                        <span className=\"error\">This field is required</span>\n                      )}\n                    {errors.exam_subject &&\n                      errors.exam_subject.type === \"minLength\" && (\n                        <span className=\"error\">\n                          {\" \"}\n                          Minimum 1 character required\n                        </span>\n                      )}\n                    {errors.exam_subject &&\n                      errors.exam_subject.type === \"maxLength\" && (\n                        <span className=\"error\">\n                          {\" \"}\n                          Maximum 20 characters allowed\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"add-new__form__container add-new__form__container--numbers\">\n                    <div className=\"add-new__form__element\">\n                      <Label\n                        for=\"exam-date\"\n                        text=\"Exam date\"\n                        className=\"add-new__form__element__label input-required\"\n                      ></Label>\n                      <Input\n                        className=\"add-new__form__element__input\"\n                        type=\"date\"\n                        id=\"exam-date\"\n                        label=\"exam_date\"\n                        placeholder=\"DD/MM/YYYY\"\n                        required\n                        ref={register({\n                          required: true,\n                        })}\n                      />\n                      {errors.exam_date &&\n                        errors.exam_date.type === \"required\" && (\n                          <span className=\"error\">This field is required</span>\n                        )}\n                    </div>\n\n                    <div className=\"add-new__form__element\">\n                      <Label\n                        for=\"study-start-date\"\n                        text=\"Start learning on\"\n                        className=\"add-new__form__element__label\"\n                      ></Label>\n                      <Input\n                        className=\"add-new__form__element__input\"\n                        type=\"date\"\n                        id=\"study-start-date\"\n                        label=\"exam_start_date\"\n                        placeholder=\"DD/MM/YYYY\"\n                        ref={register({\n                          required: false,\n                        })}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"add-new__form__container add-new__form__container--numbers\">\n                    <div className=\"add-new__form__element\">\n                      <Label\n                        for=\"page-amount\"\n                        text=\"Amount of pages\"\n                        className=\"add-new__form__element__label input-required\"\n                      ></Label>\n                      <Input\n                        className=\"add-new__form__element__input\"\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"page-amount\"\n                        label=\"exam_page_amount\"\n                        placeholder=\"829\"\n                        required\n                        ref={register({\n                          required: true,\n                          min: 1,\n                          max: 10000,\n                        })}\n                      />\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"required\" && (\n                          <span className=\"error\">This field is required</span>\n                        )}\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"max\" && (\n                          <span className=\"error\">The maximum is 10.000</span>\n                        )}\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"min\" && (\n                          <span className=\"error\">\n                            Only positive numbers are allowed\n                          </span>\n                        )}\n                    </div>\n\n                    <div className=\"add-new__form__element\">\n                      <Label\n                        for=\"page-current\"\n                        text=\"Start page\"\n                        className=\"add-new__form__element__label\"\n                      ></Label>\n                      <Input\n                        className=\"add-new__form__element__input\"\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"page-current\"\n                        label=\"exam_page_current\"\n                        placeholder=\"1\"\n                        ref={register({\n                          min: 1,\n                          max: 10000,\n                        })}\n                      />\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"max\" && (\n                          <span className=\"error\">The maximum is 10.000</span>\n                        )}\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"min\" && (\n                          <span className=\"error\">\n                            Only positive numbers are allowed\n                          </span>\n                        )}\n                    </div>\n                  </div>\n\n                  <div className=\"add-new__form__container add-new__form__container--numbers\">\n                    <div className=\"add-new__form__element\">\n                      <Label\n                        for=\"page-time\"\n                        text=\"Time per page (min)\"\n                        className=\"add-new__form__element__label\"\n                      ></Label>\n                      <Input\n                        className=\"add-new__form__element__input\"\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"page-time\"\n                        label=\"exam_page_time\"\n                        placeholder=\"5 min\"\n                        ref={register({\n                          required: false,\n                          min: 1,\n                          max: 600,\n                        })}\n                      />\n                      {errors.exam_page_time &&\n                        errors.exam_page_time.type === \"max\" && (\n                          <span className=\"error\">\n                            {\" \"}\n                            The maximum is 600 minutes (10 hours)\n                          </span>\n                        )}\n                      {errors.exam_page_time &&\n                        errors.exam_page_time.type === \"min\" && (\n                          <span className=\"error\">\n                            Only positive numbers are allowed\n                          </span>\n                        )}\n                    </div>\n\n                    <div className=\"add-new__form__element\">\n                      <Label\n                        for=\"page-repeat\"\n                        text=\"Repeat\"\n                        className=\"add-new__form__element__label\"\n                      ></Label>\n                      <Input\n                        className=\"add-new__form__element__input\"\n                        type=\"number\"\n                        id=\"page-repeat\"\n                        label=\"exam_page_repeat\"\n                        placeholder=\"2 times\"\n                        ref={register({\n                          required: false,\n                          min: 1,\n                          max: 1000,\n                        })}\n                      />\n                    </div>\n                    {errors.exam_page_repeat &&\n                      errors.exam_page_repeat.type === \"max\" && (\n                        <span className=\"error\">\n                          {\" \"}\n                          The maximum is 1000 repeats\n                        </span>\n                      )}\n                    {errors.exam_page_repeat &&\n                      errors.exam_page_repeat.type === \"min\" && (\n                        <span className=\"error\">\n                          Only positive numbers are allowed\n                        </span>\n                      )}\n                  </div>\n                </div>\n\n                <div className=\"col-md-6 add-new__right\">\n                  <div className=\"add-new__form__element\">\n                    <Label\n                      for=\"page-notes\"\n                      text=\"Notes\"\n                      className=\"add-new__form__element__label\"\n                    ></Label>\n                    <Textarea\n                      className=\"add-new__form__element__input\"\n                      id=\"page-notes\"\n                      label=\"exam_page_notes\"\n                      placeholder=\"...\"\n                      ref={register({\n                        required: false,\n                        maxLength: 100000000,\n                      })}\n                    ></Textarea>\n                    {errors.exam_page_notes &&\n                      errors.exam_page_notes.type === \"maxLength\" && (\n                        <span className=\"error\">\n                          The maximal length is 100.000.000 characters\n                        </span>\n                      )}\n                  </div>\n\n                  {/* TODO: implement file link or upload */}\n                  {/* <div className=\"add-new__form__element\">\n                    <Label\n                      for=\"pdf-upload\"\n                      text=\"Upload PDF file\"\n                      className=\"add-new__form__element__label\"\n                    ></Label>\n                    <Input\n                      className=\"add-new__form__element__input\"\n                      type=\"file\"\n                      accept=\"application/pdf, .pdf\"\n                      id=\"pdf-upload\"\n                      label=\"exam_pdf_upload\"\n                      ref={register({\n                        required: false,\n                      })}\n                    />\n                  </div> */}\n\n                  <div className=\"add-new__form__submit\">\n                    <Button\n                      className=\"add-new__form__element__btn stan-btn-primary\"\n                      variant=\"button\"\n                      text=\"Add\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className=\"col-md-12\" id=\"success-container\">\n            <p className=\"success\">the exam was successfully added</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddNew\n","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { CURRENT_USER } from \"../../graphQL/queries\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport AddNew from \"../../components/add-new/AddNew\"\n\nfunction AddNewPage() {\n  // query ----------------\n  const { loading, error } = useQuery(CURRENT_USER)\n\n  // error handling ----------------\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  // return ----------------\n  return (\n    <div className=\"add-new-page\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <h2 className=\"add-new-page__heading\">New exam</h2>\n            <p className=\"add-new-page__sub-heading\">\n              enter all details about the exam\n            </p>\n          </div>\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <AddNew></AddNew>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddNewPage\n","import React from \"react\"\nimport FullCalendar from \"@fullcalendar/react\"\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\n// --------------------------------------------------------------\n\n// TODO: https://fullcalendar.io/docs/react\nclass Calendar extends React.Component {\n  render() {\n    // return ----------------\n    return (\n      <div className=\"calendar\">\n        <div className=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-md-10\">\n              <FullCalendar\n                classname=\"\"\n                defaultView=\"dayGridMonth\"\n                plugins={[dayGridPlugin]}\n                events={[\n                  { title: \"Test Event\", date: \"2020-03-14\" },\n                  { title: \"Test Event\", date: \"2020-03-16\" },\n                ]}\n              />\n            </div>\n            <div class=\"col-md-2\"></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Calendar\n","import React from \"react\"\n\n// TODO: https://www.storyblok.com/tp/react-dynamic-component-from-json\n// https://learnwithparam.com/blog/dynamic-pages-in-react-router/\nfunction CurrentExam({ subject, currentStatus }) {\n  return (\n    <div className=\"exam\">\n      <div className=\"exam__subject box-content\">\n        <div className=\"exam__subject--headline\">\n          <h4>{subject}</h4>\n        </div>\n        <div className=\"exam__subject--current-status\">\n          <p>completed {currentStatus}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CurrentExam\n","import React, { useState } from \"react\"\n// --------------------------------------------------------------\n\n// components\nimport CurrentExam from \"../../components/current-exam/CurrentExam\"\n\n// sub components\nimport Button from \"../../components/button/Button\"\n\n// TODO: Add query to loop through current and archive exams\nconst Exams = () => {\n  const [isArchiveOpen, setArchiveExams] = useState(false)\n\n  const handleArchiveClick = () => {\n    setArchiveExams(!isArchiveOpen)\n  }\n\n  // return ----------------\n  return (\n    <div className=\"exams\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-11\">\n            <div className=\"exams__headline\">\n              <h2>Current Exams</h2>\n            </div>\n\n            <div className=\"current-exams\">\n              <CurrentExam subject=\"Backend Development\" currentStatus=\"68%\" />\n              <CurrentExam subject=\"Programming\" currentStatus=\"81%\" />\n              <CurrentExam subject=\"Business English\" currentStatus=\"37%\" />\n              <CurrentExam subject=\"Programming\" currentStatus=\"81%\" />\n              <CurrentExam subject=\"Multimedia\" currentStatus=\"43%\" />\n            </div>\n\n            <div className=\"exams__toggle-archive\">\n              <button\n                variant=\"button\"\n                onClick={handleArchiveClick}\n                className=\"exams__toggle-archive--button\"\n              >\n                <h3>Past exams</h3>\n              </button>\n              <i className={isArchiveOpen ? \"arrow down\" : \"arrow right\"}></i>\n            </div>\n\n            <div className={isArchiveOpen ? \"show\" : \"close\"}>\n              <div className=\"archive-exams\">\n                <CurrentExam subject=\"Computer Networks\" currentStatus=\"67%\" />\n                <CurrentExam subject=\"Math Statistics\" currentStatus=\"98%\" />\n                <CurrentExam subject=\"Multimedia\" currentStatus=\"43%\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Exams\n","import React from \"react\"\nimport Stan from \"../../images/mascots/0-stressed-1.svg\"\n// --------------------------------------------------------------\n\nfunction NoMatch404() {\n  // let location = useLocation()\n\n  // return ----------------\n  return (\n    <div className=\"nomatch\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-8\">\n            <h2 className=\"nomatch__headline\">Awww...Don't Cry.</h2>\n            <h3 className=\"nomatch__sub-headline\">It's just a 404 Error!</h3>\n            <p className=\"nomatch__content\">\n              What you're looking for may have been misplaced in Long Term\n              Memory..\n            </p>\n\n            <div className=\"nomatch__mascot\">\n              <img src={Stan} alt=\"Sad stan\" className=\"nomatch__mascot--img\" />\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NoMatch404\n","import React from \"react\"\n// import Button from \"../../components/button/Button\"\nimport { setAccessToken } from \"../../accessToken\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { LOGOUT_MUTATION } from \"../../graphQL/mutations\"\nimport { useMutation } from \"@apollo/react-hooks\"\nimport { useHistory } from \"react-router-dom\"\nimport { GoogleLogout } from \"react-google-login\"\nimport { CURRENT_USER } from \"../../graphQL/queries\"\n// --------------------------------------------------------------\n\nfunction UserAccount() {\n  // query ----------------\n  const [logout, { client }] = useMutation(LOGOUT_MUTATION)\n  // const { data, loading } = useQuery(CURRENT_USER) //TODO: current user vom store holen statt immer wieder vom server abzurufen (bzw einmal vl in app.js vom server holen dann im store speicher)\n\n  //TODO: CHANGE WHEN CURRENT USER IN STORE - MAKE DYNAMIC - DOESN'T WORK PROPERLY WHEN QUERY CURRENT USER HERE\n  const currentUserGoogleLogin = false\n\n  const history = useHistory()\n  let logoutButton\n  if (!currentUserGoogleLogin)\n    logoutButton = (\n      <button\n        className=\"stan-btn-primary\"\n        onClick={async () => logUserOut({ logout, client, history })}\n      >\n        Logout\n      </button>\n    )\n  else\n    logoutButton = (\n      <GoogleLogout\n        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n        buttonText=\"Logout\"\n        onLogoutSuccess={async () => logUserOut({ logout, client, history })}\n        // render={renderProps => (\n        //   <button\n        //     onClick={renderProps.onClick}\n        //     disabled={renderProps.disabled}\n        //     className=\"stan-btn-primary\"\n        //   >\n        //     Logout\n        //   </button>\n        // )}\n      ></GoogleLogout>\n    )\n\n  // return ----------------\n  return (\n    <div className=\"navigation__title\">\n      <h2>User Account </h2>\n      {logoutButton}\n      {/* <button\n        onClick={async () => {\n          //reset refresh token\n          await logout()\n          //reset access token\n          setAccessToken(\"\")\n\n          //logout all other tabs\n          // localStorage.setItem(\"logout-event\", Date.now())\n\n          //resçlo client- always good after logout\n          //TODO: DELETE IF APOLLO STORE IS NOT BEING USED\n          await client.resetStore()\n          history.push(\"/login\")\n          window.location.reload()\n        }}\n      >\n        Logout\n      </button> */}\n    </div>\n  )\n}\n\nexport default UserAccount\n\nasync function logUserOut({ logout, client, history }) {\n  //reset refresh token\n  await logout()\n  //reset access token\n  setAccessToken(\"\")\n\n  //logout all other tabs\n  localStorage.setItem(\"logout-event\", Date.now())\n  //resçlo client- always good after logout\n  //TODO: DELETE IF APOLLO STORE IS NOT BEING USED\n  await client.resetStore()\n  history.push(\"/login\")\n  window.location.reload()\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\nfunction Imprint() {\n  // return ----------------\n  return (\n    <div className=\"imprint-page\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h2 className=\"imprint-page__heading\">Imprint</h2>\n          </div>\n          <div className=\"col-md-6\">\n            <p className=\"imprint-page__text\">\n              This is a MultiMedia Project 3 by Natasha, Tra and Daniela.\n            </p>\n            <p className=\"imprint-page__text\">\n              Fachhochschule Salzburg GmbH\n              <br></br>\n              Urstein Süd 1<br></br>\n              A-5412\n              <br></br>\n              Puch/Salzburg Österreich\n            </p>\n            <div className=\"imprint-page__contact\">\n              <p className=\"imprint-page__contact__container\">\n                <strong>T </strong>\n                <a\n                  href=\"tel:+435022110\"\n                  className=\"imprint-page__contact__container__link\"\n                >\n                  +43 50-2211-0\n                </a>\n              </p>\n              <p className=\"imprint-page__contact__container\">\n                <strong>Mail </strong>\n                <a\n                  href=\"mailto:medien@fh-salzburg.ac.at\"\n                  className=\"imprint-page__contact__container__link\"\n                >\n                  medien@fh-salzburg.ac.at\n                </a>\n              </p>\n            </div>\n            <p className=\"imprint-page__text\">© 2020 FH Salzburg</p>\n          </div>\n          <div className=\"col-md-6\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Imprint\n","import React from \"react\"\n// --------------------------------------------------------------\n\nfunction DataPolicy() {\n  // return ----------------\n  return (\n    <div className=\"navigation__title\">\n      <h2>Data Policy</h2>\n    </div>\n  )\n}\n\nexport default DataPolicy\n","import React from \"react\"\nimport { LOGIN_MUTATION, GOOGLE_LOGIN_MUTATION } from \"../../graphQL/mutations\"\nimport { useForm } from \"react-hook-form\"\nimport { useMutation } from \"@apollo/react-hooks\"\nimport { useHistory } from \"react-router-dom\"\nimport { setAccessToken } from \"../../accessToken\"\n// import ReactDOM from \"react-dom\"\nimport { GoogleLogin } from \"react-google-login\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport Input from \"../../components/input/Input\"\nimport Label from \"../../components/label/Label\"\nimport Button from \"../../components/button/Button\"\n\nfunction Login() {\n  const history = useHistory()\n  const successGoogle = async response => {\n    try {\n      const resp = await googleLogin({\n        variables: {\n          idToken: response.tokenId,\n        },\n      })\n      //TODO: the errors returned from verifying the google token id in the backend can return some complicated errors - better give user more simple error messages\n      if (resp && resp.data && resp.data.googleLogin)\n        setAccessToken(resp.data.googleLogin.accessToken)\n      else throw new Error(\"The google login failed\")\n\n      history.push(\"/\")\n      window.location.reload()\n    } catch (err) {\n      //TODO: USER DEN ERROR MITTEILEN\n      console.error(err.message)\n    }\n  }\n  const failureGoogle = response => {\n    console.log(JSON.stringify(response.Qt.Ad))\n  }\n\n  // mutation ----------------\n  const [googleLogin, { googleLoginData }] = useMutation(GOOGLE_LOGIN_MUTATION)\n  const [login, { loginData }] = useMutation(LOGIN_MUTATION)\n\n  // form specific ----------------\n  const { register, errors, handleSubmit } = useForm()\n\n  const onSubmit = async formData => {\n    await handleLogin({ formData, login, history })\n  }\n\n  // return ----------------\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"login__form box-content\">\n      <div className=\"row\">\n        <div className=\"col-md-12 login__form__inner\">\n          <div className=\"login__form__element\">\n            <Label\n              for=\"email\"\n              text=\"E-Mail\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"email\"\n              id=\"email\"\n              label=\"email\"\n              placeholder=\"lucy@stan.io\"\n              required\n              ref={register({\n                required: true,\n                minLength: 1,\n                maxLength: 50,\n                pattern: /^([\\w_\\-\\.\\\"\\+\\!\\#\\$\\%\\&\\'\\*\\/\\=\\?\\^\\`\\{\\|\\}\\~ ]{1,64})@([\\w_\\-\\.]+)\\.([a-z]+)$/,\n              })}\n            />\n\n            {errors.email && errors.email.type === \"required\" && (\n              <span className=\"error\">This field is required</span>\n            )}\n            {errors.email && errors.email.type === \"minLength\" && (\n              <span className=\"error\">Minimum 1 character required</span>\n            )}\n            {errors.email && errors.email.type === \"maxLength\" && (\n              <span className=\"error\">Maximum 50 characters allowed</span>\n            )}\n            {errors.email && errors.email.type === \"pattern\" && (\n              <span className=\"error\">This is no valid e-mail address</span>\n            )}\n          </div>\n\n          <div className=\"login__form__element\">\n            <Label\n              for=\"password\"\n              text=\"Password\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"password\"\n              id=\"password\"\n              label=\"password\"\n              placeholder=\"\"\n              required\n              ref={register({\n                required: true,\n                minLength: 8,\n                maxLength: 30,\n                pattern: /^.{8,30}$/,\n              })}\n            />\n            {errors.password && errors.password.type === \"required\" && (\n              <span className=\"error\">This field is required</span>\n            )}\n            {errors.password && errors.password.type === \"minLength\" && (\n              <span className=\"error\">Minimum 8 characters required</span>\n            )}\n            {errors.password && errors.password.type === \"maxLength\" && (\n              <span className=\"error\">Maximum 30 characters allowed</span>\n            )}\n            {errors.password && errors.password.type === \"pattern\" && (\n              <span className=\"error\">\n                The password needs to be between 8 and 30 characters long\n              </span>\n            )}\n          </div>\n\n          <div className=\"login__form__buttons\">\n            <div\n              className=\"login__form__buttons__button-right\"\n              data-testid=\"button-login\"\n            >\n              <GoogleLogin\n                clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                buttonText=\"Login\"\n                render={renderProps => (\n                  <button\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                    className=\"stan-btn-secondary\"\n                  >\n                    Google Login\n                  </button>\n                )}\n                onSuccess={successGoogle}\n                onFailure={failureGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </div>\n            <div className=\"login__form__buttons__button-left\">\n              <Button\n                className=\"stan-btn-primary\"\n                variant=\"button\"\n                text=\"Login\"\n              />\n            </div>\n          </div>\n          <div className=\"login__form__redirect-signup\">\n            <p className=\"login__form__redirect-signup__text\">\n              not registered?\n            </p>{\" \"}\n            <a href=\"/sign-up\" className=\"login__form__redirect-signup__link\">\n              sign up\n            </a>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default Login\n\nasync function handleLogin({ formData, login, history }) {\n  try {\n    const resp = await login({\n      variables: {\n        email: formData.email,\n        password: formData.password,\n      },\n      //TODO: STORE - ICH WEIß NICHT OB IHR DAS VERWENDET 😅lg natasha\n      //https://www.apollographql.com/docs/react/caching/cache-interaction/\n      // update: (store, { data }) => {\n      //   if (!data) return null\n      //   store.writeQuery({\n      //     //update current user in cache\n      //     query: LOGIN_MUTATION,\n      //     data: data.login.user,\n      //   })\n      // },\n    })\n\n    if (resp && resp.data && resp.data.login) {\n      setAccessToken(resp.data.login.accessToken)\n    } else {\n      // displays server error (backend)\n      throw new Error(\"The login failed\")\n    }\n    // redirect\n    history.push(\"/\")\n    window.location.reload()\n  } catch (err) {\n    //TODO-AUTH: USER DEN ERROR MITTEILEN\n    console.error(err.message)\n    // console.log(err)\n  }\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport LoginForm from \"../../components/login/Login\"\n\nfunction LoginPage() {\n  // return ----------------\n  return (\n    <div className=\"login\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10 login__headline\">\n            <h2 className=\"login__headline__heading\">Login</h2>\n            <p className=\"login__headline__sub-heading\">\n              You can log into your account via Google or your E-Mail address\n            </p>\n          </div>\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-2\"></div>\n          <div className=\"col-md-8 login__form-container\">\n            <LoginForm />\n          </div>\n          <div className=\"col-md-2\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React, { useState } from \"react\"\nimport { Carousel } from \"react-responsive-carousel\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\n// components\nimport HappyMascot from \"../../images/mascots/user-mascot/0.svg\"\nimport VeryHappyMascot from \"../../images/mascots/user-mascot/1.svg\"\nimport HappyGirlyMascot from \"../../images/mascots/user-mascot/2.svg\"\nimport VeryHappyGirlyMascot from \"../../images/mascots/user-mascot/3.svg\"\nimport HappyCleverMascot from \"../../images/mascots/user-mascot/4.svg\"\nimport VeryHappyCleverMascot from \"../../images/mascots/user-mascot/5.svg\"\n\nfunction Mascots({ getMascotCallback }) {\n  return (\n    <div className=\"mascots\">\n      <div className=\"mascots__sub-heading\">\n        <p>\n          Choose your mascot, <br />\n          you can change it afterwards in your profile\n        </p>\n      </div>\n\n      <Carousel\n        showStatus={false}\n        showThumbs={false}\n        infiniteLoop={true}\n        showIndicators={false}\n        useKeyboardArrows={true}\n        onChange={getMascotCallback}\n      >\n        <div className=\"container\">\n          <img\n            className=\"container__img\"\n            src={HappyMascot}\n            alt=\"a happy mascot\"\n          />\n        </div>\n        <div className=\"container\">\n          <img\n            className=\"container__img\"\n            src={VeryHappyMascot}\n            alt=\"a very happy mascot\"\n          />\n        </div>\n        <div className=\"container\">\n          <img\n            className=\"container__img\"\n            src={HappyGirlyMascot}\n            alt=\"a happy girly mascot\"\n          />\n        </div>\n        <div className=\"container\">\n          <img\n            className=\"container__img\"\n            src={VeryHappyGirlyMascot}\n            alt=\"a very happy girly mascot\"\n          />\n        </div>\n        <div className=\"container\">\n          <img\n            className=\"container__img\"\n            src={HappyCleverMascot}\n            alt=\"a happy clever mascot\"\n          />\n        </div>\n        <div className=\"container\">\n          <img\n            className=\"container__img\"\n            src={VeryHappyCleverMascot}\n            alt=\"a very happy clever mascot\"\n          />\n        </div>\n      </Carousel>\n    </div>\n  )\n}\n\nexport default Mascots\n","import React, { useState } from \"react\"\nimport { useMutation } from \"@apollo/react-hooks\"\n// import { SUCCESS_SIGNUP } from \"../../graphQL/queries\"\nimport { SIGNUP_MUTATION, GOOGLE_LOGIN_MUTATION } from \"../../graphQL/mutations\"\nimport { useHistory } from \"react-router-dom\"\nimport { setAccessToken } from \"../../accessToken\"\nimport { useForm } from \"react-hook-form\"\nimport { GoogleLogin } from \"react-google-login\"\n\n// --------------------------------------------------------------\n\n// components ----------------\nimport Input from \"../../components/input/Input\"\nimport Label from \"../../components/label/Label\"\nimport Button from \"../../components/button/Button\"\nimport Mascots from \"../../components/mascots/Mascots\"\n//TODO: block signup & login path when user is logged in\n\nfunction SignUp() {\n  const successGoogle = async response => {\n    try {\n      const resp = await googleLogin({\n        variables: {\n          idToken: response.tokenId,\n        },\n      })\n      //TODO: the errors returned from verifying the google token id in the backend can return some complicated errors - better give user more simple error messages\n      if (resp && resp.data && resp.data.googleLogin)\n        setAccessToken(resp.data.googleLogin.accessToken)\n      else throw new Error(\"The google login failed\")\n\n      history.push(\"/\")\n      window.location.reload()\n    } catch (err) {\n      //TODO: USER DEN ERROR MITTEILEN\n      console.error(err.message)\n    }\n  }\n  const failureGoogle = response => {\n    // console.log(JSON.stringify(response.Qt.Ad))\n    //TODO USER MITTEILEN\n    console.error(\"Google login failed\")\n  }\n\n  // mutation ----------------\n  const [signup, { mutationData }] = useMutation(SIGNUP_MUTATION)\n  const [googleLogin, { googleLoginData }] = useMutation(GOOGLE_LOGIN_MUTATION)\n  let [selectedMascot, getSelectedMascot] = useState(0)\n\n  const history = useHistory()\n\n  // form specific ----------------\n  const { register, errors, handleSubmit } = useForm()\n\n  const onSubmit = async formData => {\n    handleSignup({ formData, signup, history, selectedMascot })\n  }\n\n  getSelectedMascot = number => {\n    selectedMascot = number\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"login__form box-content\">\n      <div className=\"row\">\n        <div className=\"col-md-12 login__form__inner\">\n          <div className=\"login__form__element\">\n            <Mascots getMascotCallback={getSelectedMascot} />\n          </div>\n          <div className=\"login__form__element\">\n            <Label\n              for=\"username\"\n              text=\"Username\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"text\"\n              id=\"username\"\n              label=\"username\"\n              placeholder=\"Lucy\"\n              required\n              ref={register({\n                required: true,\n                minLength: 1,\n                maxLength: 30,\n                pattern: /^.{1,30}$/,\n              })}\n            />\n            {errors.username && errors.username.type === \"required\" && (\n              <span className=\"error\">This field is required</span>\n            )}\n            {errors.username && errors.username.type === \"minLength\" && (\n              <span className=\"error\"> Minimum 8 character required</span>\n            )}\n            {errors.username && errors.username.type === \"maxLength\" && (\n              <span className=\"error\"> Maximum 30 characters allowed</span>\n            )}\n            {errors.username && errors.username.type === \"pattern\" && (\n              <span className=\"error\">\n                The username needs to be between 1 and 30 characters long\n              </span>\n            )}\n          </div>\n\n          <div className=\"login__form__element\">\n            <Label\n              for=\"email\"\n              text=\"E-Mail\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"email\"\n              id=\"email\"\n              label=\"email\"\n              placeholder=\"lucy@stan.io\"\n              required\n              ref={register({\n                required: true,\n                minLength: 1,\n                maxLength: 50,\n                pattern: /^([\\w_\\-\\.\\\"\\+\\!\\#\\$\\%\\&\\'\\*\\/\\=\\?\\^\\`\\{\\|\\}\\~ ]{1,64})@([\\w_\\-\\.]+)\\.([a-z]+)$/,\n              })}\n            />\n            {errors.email && errors.email.type === \"required\" && (\n              <span className=\"error\">This field is required</span>\n            )}\n            {errors.email && errors.email.type === \"minLength\" && (\n              <span className=\"error\"> Minimum 1 character required</span>\n            )}\n            {errors.email && errors.email.type === \"maxLength\" && (\n              <span className=\"error\"> Maximum 30 characters allowed</span>\n            )}\n            {errors.email && errors.email.type === \"pattern\" && (\n              <span className=\"error\">This is no valid e-mail address</span>\n            )}\n          </div>\n\n          <div className=\"login__form__element\">\n            <Label\n              for=\"password\"\n              text=\"Password\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"password\"\n              id=\"password\"\n              label=\"password\"\n              placeholder=\"********\"\n              required\n              ref={register({\n                required: true,\n                minLength: 8,\n                maxLength: 30,\n                pattern: /^.{8,30}$/,\n              })}\n            />\n            {errors.password && errors.password.type === \"required\" && (\n              <span className=\"error\">This field is required</span>\n            )}\n            {errors.password && errors.password.type === \"minLength\" && (\n              <span className=\"error\"> Minimum 8 characters required</span>\n            )}\n            {errors.password && errors.password.type === \"maxLength\" && (\n              <span className=\"error\"> Maximum 30 characters allowed</span>\n            )}\n            {errors.password && errors.password.type === \"pattern\" && (\n              <span className=\"error\">\n                The password needs to be between 8 and 30 characters long\n              </span>\n            )}\n          </div>\n\n          <div className=\"login__form__buttons\">\n            <div className=\"login__form__buttons__button-right\">\n              <GoogleLogin\n                clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                buttonText=\"Login\"\n                render={renderProps => (\n                  <button\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                    className=\"stan-btn-secondary\"\n                  >\n                    Google Login\n                  </button>\n                )}\n                onSuccess={successGoogle}\n                onFailure={failureGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </div>\n            <div className=\"login__form__buttons__button-left\">\n              <Button\n                variant=\"button\"\n                text=\"Sign up\"\n                className=\"stan-btn-primary\"\n              />\n            </div>\n          </div>\n\n          <div className=\"login__form__redirect-signup\">\n            <p className=\"login__form__redirect-signup__text\">\n              already have an account?\n            </p>\n            <a href=\"/login\" className=\"login__form__redirect-signup__link\">\n              login\n            </a>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default SignUp\n\nasync function handleSignup({ formData, signup, history, selectedMascot = 0 }) {\n  try {\n    const resp = await signup({\n      variables: {\n        username: formData.username,\n        email: formData.email,\n        password: formData.password,\n        mascot: selectedMascot,\n      },\n    })\n    console.log(selectedMascot)\n    if (resp && resp.data && resp.data.signup) {\n      setAccessToken(resp.data.signup.accessToken)\n      console.log(\"saved access token after signup\")\n    } else {\n      // displays server error (backend)\n      throw new Error(\"The sign up failed\")\n    }\n    // redirect\n    history.push(\"/\")\n    window.location.reload()\n  } catch (err) {\n    //TODO: USER DEN ERROR MITTEILEN\n    console.error(err.message)\n    // console.log(err)\n  }\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport SignUpForm from \"../../components/signup/SignUp\"\n\nfunction SignUpPage() {\n  // return ----------------\n  return (\n    <div className=\"login\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10 login__headline\">\n            <h2 className=\"login__headline__heading\">Sign Up</h2>\n            <p className=\"login__headline__sub-heading\">\n              You can sign up via Google or with your E-Mail address\n            </p>\n          </div>\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-2\"></div>\n          <div className=\"col-md-8 login__form-container\">\n            <SignUpForm />\n          </div>\n          <div className=\"col-md-2\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUpPage\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst SubHeading = ({ text, className }) => {\n  // return ----------------\n  return <p className={className}>{text}</p>\n}\n\nexport default SubHeading\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Listing = ({ text, className }) => {\n  // return ----------------\n  return <li className={className}>{text}</li>\n}\n\nexport default Listing\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport SubHeading from \"../../components/sub-heading/SubHeading\"\nimport Listing from \"../../components/listing/Listing\"\n\nfunction Home() {\n  // return ----------------\n  return (\n    <div className=\"home\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <h2 className=\"home__heading\">\n              Organize your <br></br>Study Plan\n            </h2>\n            <SubHeading className=\"sub-heading\" text=\"Easy . Fast . Online\" />\n\n            <p className=\"home__text\">\n              Students like you can add and organize their learning material for\n              exams with Stan! Stan supports you in dividing up your tasks for\n              each subject. Deadlines, as well as calculated learning chunks,\n              are visualized so you can keep track of your progress and counter\n              procrastination.\n            </p>\n\n            <div className=\"home__list\">\n              <Listing\n                className=\"list-style\"\n                text=\"increase your learning motivation\"\n              />\n              <Listing\n                className=\"list-style\"\n                text=\"decrease your procrastination\"\n              />\n            </div>\n\n            <div className=\"home__btn\">\n              <a href=\"/sign-up\" className=\"stan-btn-double\">\n                Start now\n              </a>\n            </div>\n            <div className=\"col-md-1\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Image = ({ path, text, className }) => {\n  // return ----------------\n  return <img alt={text} src={path} className={className} />\n}\n\nexport default Image\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// sub-components ----------------\n// import Listing from \"../../components/listing/Listing\"\nimport Image from \"../../components/image/Image\"\n\n// images ----------------\nimport Pic1 from \"../../images/desk1.png\"\nimport Pic2 from \"../../images/desk2.png\"\n\nfunction About() {\n  // return ----------------\n  return (\n    <div className=\"about\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <h2 className=\"about__heading\">Who is stan?</h2>\n            <p className=\"sub-heading\">We will explain</p>\n          </div>\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <div className=\"container-fluid text-image-module\">\n              <div className=\"row\">\n                <div className=\"col-xl-6\">\n                  <div className=\"about__content\">\n                    <h3 className=\"list-style\">your online study plan</h3>\n                    <p className=\"about__content__text\">\n                      Students like you can easily add and organize their\n                      learning material for exams with Stan. Simply add your\n                      exam subjects in your stan dashboard and prioritize them.\n                      Stan will then automatically calculate your personal\n                      learning chunks.\n                    </p>\n                    <div className=\"about__content__btn\">\n                      <a href=\"/sign-up\" className=\"stan-btn-double\">\n                        Join stan\n                      </a>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-6\">\n                  <Image\n                    path={Pic1}\n                    alt=\"Desk with devices and cup of coffee\"\n                    className=\"about__img\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <div className=\"container-fluid text-image-module text-image-module--reverse\">\n              <div className=\"row\">\n                <div className=\"col-xl-6\">\n                  <div className=\"about__content\">\n                    <h3 className=\"list-style\">fight procrastination</h3>\n                    <p className=\"about__content__text\">\n                      Students like you can easily add and organize their\n                      learning material for exams with Stan. Simply add your\n                      exam subjects in your stan dashboard and prioritize them.\n                      Stan will then automatically calculate your personal\n                      learning chunks.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-6\">\n                  <Image\n                    path={Pic2}\n                    alt=\"Desk with devices and cup of coffee\"\n                    className=\"about__img\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import React from \"react\"\n// --------------------------------------------------------------\n\nfunction LoginPopUp() {\n  // return ----------------\n  return (\n    <div className=\"popup\">\n      <div className=\"popup__container\">\n        <div className=\"popup__headline\">\n          <h4>Not Logged In</h4>\n        </div>\n\n        <div className=\"popup__content\">\n          <p className=\"popup__content__paragraph\">\n            Please log in to continue.\n          </p>\n          <a href=\"/login\" className=\"popup__content__btn stan-btn-secondary\">\n            Login\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPopUp\n","import React from \"react\"\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport { getAccessToken } from \"../../accessToken\"\n// --------------------------------------------------------------\n\n// pages component ----------------\nimport Dashboard from \"../../pages/dashboard-page/DashboardPage\"\nimport AddNew from \"../../pages/add-new-page/AddNewPage\"\nimport Calendar from \"../../pages/calendar-page/CalendarPage\"\nimport Exams from \"../../pages/exams-page/ExamsPage\"\nimport NoMatch404 from \"../../pages/no-match-page/404Page\"\nimport UserAccount from \"../../pages/user-account-page/UserAccountPage\"\nimport Imprint from \"../../pages/imprint-page/ImprintPage\"\nimport DataPolicy from \"../../pages/data-policy-page/DataPolicyPage\"\nimport Login from \"../../pages/login-page/LoginPage\"\nimport SignUp from \"../../pages/sign-up-page/SignUpPage\"\nimport Home from \"../../pages/home-page/HomePage\"\nimport About from \"../../pages/about-page/AboutPage\"\nimport LoginPopUp from \"../../components/login-popup/LoginPopUp\"\n\nconst Content = () => {\n  // query ----------------\n  let isAuth\n  const token = getAccessToken()\n\n  if (token !== \"\") isAuth = true\n  else isAuth = false\n\n  // return ----------------\n  return (\n    <main className=\"content\">\n      <Switch>\n        {!isAuth ? <Route exact path=\"/\" component={Home} /> : null}\n        {isAuth ? <Route exact={true} path=\"/\" component={Dashboard} /> : null}\n\n        {!isAuth ? (\n          <Route exact path=\"/about\" component={About} />\n        ) : (\n          <Redirect from=\"/about\" to=\"/\" />\n        )}\n\n        {!isAuth ? (\n          <Route exact path=\"/login\" component={Login} />\n        ) : (\n          <Redirect from=\"/login\" to=\"/\" />\n        )}\n        {!isAuth ? (\n          <Route exact path=\"/sign-up\" component={SignUp} />\n        ) : (\n          <Redirect from=\"/sign-up\" to=\"/\" />\n        )}\n\n        {isAuth ? (\n          <Route exact path=\"/add-new\" component={AddNew} />\n        ) : (\n          <Redirect from=\"/add-new\" to=\"/login\" />\n        )}\n        {isAuth ? (\n          <Route exact path=\"/calendar\" component={Calendar} />\n        ) : (\n          <Redirect from=\"/calendar\" to=\"/login\" />\n        )}\n        {isAuth ? (\n          <Route exact path=\"/exams\" component={Exams} />\n        ) : (\n          <Redirect exact from=\"/exams\" to=\"/login\" />\n        )}\n        {isAuth ? (\n          <Route exact path=\"/profile\" component={UserAccount} />\n        ) : (\n          <Redirect from=\"/profile\" to=\"/login\" />\n        )}\n        {!isAuth ? <Route exact path=\"/popup\" component={LoginPopUp} /> : null}\n\n        <Route exact path=\"/imprint\" component={Imprint} />\n        <Route exact path=\"/data-policy\" component={DataPolicy} />\n\n        <Route path=\"*\" component={NoMatch404} />\n      </Switch>\n    </main>\n  )\n}\n\nexport default Content\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst backdrop = props => <div className=\"backdrop\" onClick={props.click} />\n\nexport default backdrop\n","import React, { useState } from \"react\"\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\"\nimport Logo from \"../../images/icons/logo.svg\"\nimport { CURRENT_USER } from \"../../graphQL/queries\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport BurgerButton from \"../burger-button/BurgerButton\"\nimport Content from \"../content/Content\"\nimport Backdrop from \"../backdrop/Backdrop\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport Image from \"../../components/image/Image\"\n\n// images ----------------\nimport Pic1 from \"../../images/icons/profile.png\"\n\nconst Navbar = () => {\n  // query ----------------\n  const { data, loading } = useQuery(CURRENT_USER)\n  const [isSideBarOpen, setSideBar] = useState(false)\n\n  let body,\n    backdrop = null\n\n  const handleClickSidebar = () => {\n    setSideBar(!isSideBarOpen)\n  }\n\n  const closeSidebar = () => {\n    setSideBar(false)\n  }\n\n  if (isSideBarOpen) backdrop = <Backdrop click={handleClickSidebar} />\n  // return ----------------\n  return (\n    <Router className=\"sidebar\">\n      <div className=\"burger\">\n        <div className={isSideBarOpen ? \"close\" : \"open\"}>\n          <a href=\"/\">\n            <img src={Logo} alt=\"Stans Logo\" className=\"burger__logo-img\" />\n          </a>\n          <BurgerButton click={handleClickSidebar} />\n        </div>\n      </div>\n\n      <nav className={isSideBarOpen ? \"showNav\" : \"closeNav\"}>\n        <div className=\"sidebar__items\">\n          <div className=\"sidebar__items__logo\">\n            <a href=\"/\">\n              <img\n                src={Logo}\n                alt=\"Stans Logo\"\n                className=\"sidebar__items__logo--img\"\n              />\n            </a>\n          </div>\n          {body}\n          <ul className=\"sidebar__items__list\">\n            <div\n              className=\"sidebar__items__list__menu-top\"\n              data-testid=\"navbar\"\n            >\n              {!loading && data && !data.currentUser ? (\n                <li className=\"list-item list-item--logged-out\">\n                  <NavLink\n                    strict\n                    to=\"/\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                    data-testid=\"home-link\"\n                  >\n                    Home\n                  </NavLink>\n                </li>\n              ) : null}\n\n              {!loading && data && !data.currentUser ? (\n                <li className=\"list-item list-item--logged-out\">\n                  <NavLink\n                    data-testid=\"about-link\"\n                    strict\n                    to=\"/about\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                  >\n                    About\n                  </NavLink>\n                </li>\n              ) : null}\n\n              {!loading && data && !data.currentUser ? (\n                <li className=\"list-item list-item--logged-out\">\n                  <NavLink\n                    strict\n                    to=\"/login\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                  >\n                    Login\n                  </NavLink>\n                </li>\n              ) : null}\n\n              {!loading && data && data.currentUser ? (\n                <li className=\"sidebar__items__list__menu-top__dashboard list-item list-item--logged-in\">\n                  <NavLink\n                    strict\n                    to=\"/\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                  >\n                    Dashboard\n                  </NavLink>\n                </li>\n              ) : null}\n\n              {!loading && data && data.currentUser ? (\n                <li className=\"sidebar__items__list__menu-top__add-new list-item list-item--logged-in\">\n                  <NavLink\n                    strict\n                    to=\"/add-new\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                  >\n                    Add New\n                  </NavLink>\n                </li>\n              ) : null}\n\n              {!loading && data && data.currentUser ? (\n                <li className=\"sidebar__items__list__menu-top__calendar list-item list-item--logged-in\">\n                  <NavLink\n                    strict\n                    to=\"/calendar\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                  >\n                    Calendar\n                  </NavLink>\n                </li>\n              ) : null}\n\n              {!loading && data && data.currentUser ? (\n                <li className=\"sidebar__items__list__menu-top__exams list-item list-item--logged-in\">\n                  <NavLink\n                    strict\n                    to=\"/exams\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                  >\n                    Exams\n                  </NavLink>\n                </li>\n              ) : null}\n            </div>\n\n            <div className=\"sidebar__items__list__menu-bottom\">\n              {!loading && data && data.currentUser ? (\n                <li>\n                  <NavLink\n                    strict\n                    to=\"/profile\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                  >\n                    <Image\n                      path={Pic1}\n                      alt=\"Shape of a person as profile Icon\"\n                      className=\"profile-img\"\n                    />\n                  </NavLink>\n                </li>\n              ) : null}\n\n              <li>Dark mode</li>\n              <li>\n                <NavLink\n                  strict\n                  to=\"/imprint\"\n                  exact\n                  activeClassName=\"active\"\n                  onClick={closeSidebar}\n                >\n                  Imprint\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  strict\n                  to=\"/data-policy\"\n                  exact\n                  activeClassName=\"active\"\n                  onClick={closeSidebar}\n                >\n                  Data Policy\n                </NavLink>\n              </li>\n            </div>\n          </ul>\n        </div>\n      </nav>\n\n      {backdrop}\n      <Content />\n    </Router>\n  )\n}\n\nexport default Navbar\n","import React, { useState, useEffect } from \"react\"\n\nimport \"./App.scss\"\n// import ApolloClient from \"apollo-boost\"\nimport { ApolloProvider } from \"@apollo/react-hooks\" //inserts received data into our app\nimport { setAccessToken } from \"./accessToken\"\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\"\n\nimport { client } from \"./apolloClient\"\n\n// components\nimport STAN from \"./components/STAN/STAN\"\n\nconst RedirectPopup = () => {\n  return (\n    <Router>\n      <Redirect to=\"/popup\" />\n    </Router>\n  )\n}\n\n/* TODO: CACHING APOLLO */\nconst App = () => {\n  const [loading, setLoading] = useState(true)\n\n  //TODO-LOGOUT-ALL-TABS\n  window.addEventListener(\"storage\", e => {\n    if (e.key === \"logout-event\") {\n      localStorage.removeItem(\"logout-event\")\n      //TODO: go to login and inform user that logout occurred\n\n      RedirectPopup()\n      // history.push(\"/popup\")\n      window.location.replace(\"/popup\")\n      // window.location.reload()\n    }\n  })\n\n  useEffect(() => {\n    // TODO: if save accesstoken in store, use the if - but if only save in memory delete\n    //if (!getAccessToken()) {\n    // fetch(\"http://localhost:5000/refresh_token\", {\n    // console.log(\"here:\" + process.env.DOMAIN_REFRESH_TOKEN)\n    fetch(\"/refresh_token\", {\n      method: \"POST\",\n      credentials: \"include\",\n    })\n      .then(async resp => {\n        const { accessToken } = await resp.json()\n        setAccessToken(accessToken)\n        setLoading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n    // }\n\n    //In case a second tab wasn't open, to make sure it is deleted\n    // localStorage.removeItem(\"logout-event\")\n  }, [])\n\n  // componentWillUnmount() {\n  //   ChatAPI.unsubscribeFromFriendStatus(\n  //     this.props.friend.id,\n  //     this.handleStatusChange\n  //   );\n  // }\n\n  if (loading) {\n    return <div>loading...</div>\n  }\n\n  return (\n    <ApolloProvider client={client}>\n      <header>\n        <h1 className=\"hide\">Stan - online study plan</h1>\n      </header>\n\n      <STAN />\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}