image: node:latest
# stages:
#   - npm
#   - lint
#   - test
#   - staging
#   - deployment

npm:client:
  tags:
    - node
  stage: npm
  artifacts:
    paths:
      - client/node_modules/
    expire_in: 1 days
    when: always
  script:
    - cd client/
    - echo "Running npm ci ..."
    - npm ci
  except:
    - /^back-feature.*$/

lint client:
  stage: lint
  tags:
    - node
  script:
    - cd client/
    - echo "Linting.."
    - npm run format
  except:
    - /^front-feature.*$/
    - /^back-feature.*$/

# lint client merge:
#   stage: lint
#   tags:
#     - node
#   script:
#     - cd client/
#     - echo "Linting.."
#     - npm run format
#   only:
#     - merge_requests
#     - /^front-feature.*$/

# unit testing client:
#   stage: test
#   tags:
#     - node
#   script:
#     - cd server/
#     - echo "Running unit tests ..."
#     - ./node_modules/.bin/jest ./tests/unit/
#   except:
#     - /^front-feature.*$/

# integration testing client:
#   stage: test
#   tags:
#     - node
#   variables:
#     ACCESS_TOKEN_SECRET: "(slkjdfpowefs-dopioufsdgsf$%&)sdlkngfsjdgsdf6573(45hru8§-§)$%lk4fwj9$3jhwo849ufepodv"
#     REFRESH_TOKEN_SECRET: "klsd-jfoisjepeodfj!slkdghjsdg345678ceu-sdf2345§rhfs%%$%/(/&werldfgkhjkjpiodjfoieahf"
#   script:
#     - cd server/
#     - echo "Running integration tests ..."
#     - ./node_modules/.bin/jest ./tests/integration/
#   except:
#     - /^front-feature.*$/

staging:client:
  stage: staging client
  artifacts:
    paths:
      - server/public/
    expire_in: 1 week
  tags:
    - node
  script:
    - rm -rf server/public
    - mkdir server/public
    - cd client/

    # #TODO: remove CI=false - so it treats warnings as errors again
    - CI=false npm run build

  only:
    - development
